pipeline{
    agent {
            label 'agent-1'
    }
    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select Action')

        password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
    }
    stages {
        stage('Init and plan') {
            steps {
                withAWS(region:'us-east-1', credentials :'AWS-CREDS') {
                    sh  """
                        cd 00-vpc 
                        terraform init --reconfigure
                        terraform plan -out=tfplan
                    """
            }
        }
         }
                
        stage('Deploy') {
             when {
                //branch 'production'
                 expression { env.GIT_BRANCH == "origin/main" }
            }
            steps {
                sh 'echo this is deploy'
            }
        }
        stage('scan') {
            steps {
                sh 'echo this is scan'
            }
        }
      
    }
    post {
        always {
            echo " this section runs always"
            deleteDir()
        }
        success {
            echo " this section run when pipeline is success"
        }
        failure {
            echo " this section run when pipeline is failure"
        }
    }
}